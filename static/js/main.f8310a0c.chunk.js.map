{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","reversed","setReversed","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAzBR,SACEA,EAAiBJ,EAAoBE,GAErC,IAAMG,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQR,GACN,KAAKL,EAASc,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKb,EAASgB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAINV,EAAWG,EAAaQ,UAAYR,EAO7BS,CAAkBlB,EAAiBI,EAAUE,GAO3D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYjB,IAAaL,EAASc,WAEtCS,QAAS,kBAAMjB,EAAYN,EAASc,WANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYjB,IAAaL,EAASgB,SAEtCO,QAAS,kBAAMjB,EAAYN,EAASgB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAyB,IAAbf,IAEhBgB,QAAS,kBAAMf,GAAY,SAAAgB,GAAK,OAAKA,MANvC,sBAWEnB,IAAaL,EAASI,MAAQG,IAC9B,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,kBA5CjBjB,EAAYN,EAASI,WACrBI,GAAY,IAwCN,sBAUJ,6BACGC,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCtGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f8310a0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[], sortType: SortType, reversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  return reversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reversed, setReversed] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, reversed);\n\n  const toReset = () => {\n    setSortType(SortType.NONE);\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': reversed !== true },\n          )}\n          onClick={() => setReversed(state => !state)}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => toReset()}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}